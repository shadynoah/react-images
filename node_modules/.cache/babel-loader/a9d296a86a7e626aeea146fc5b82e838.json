{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/front-end-assignment-master/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { getNASAPictures } from \"./NasaAPI\";\n\nfunction App() {\n  const [pictures, updatePictures] = React.useState(null);\n  console.log(\"pictures are\", pictures);\n  useEffect(() => {\n    if (!pictures) {\n      // const startDate = new Date(\"2020-07-01T08:28:41.917Z\");\n      const startDate = new Date(\"2022-02-20T08:28:41.917Z\");\n      const endDate = new Date();\n      getNASAPictures(startDate, endDate).then(res => {\n        console.log(\"startDate is\", startDate);\n        console.log(\"endDate is\", endDate);\n        console.log(\"res is\", res);\n        updatePictures(res.filter(image => image.media_type === \"image\"));\n      });\n    }\n  }, [pictures]);\n  let subArrays = [];\n\n  function spliter(array, chunkSize) {\n    for (let i = 0; i < array.length; i += chunkSize) {\n      const chunk = array.slice(i, i + chunkSize); // do whatever\n\n      console.log();\n      subArrays.push(chunk);\n    }\n\n    return subArrays;\n  }\n\n  let subArrayRes = pictures && spliter(pictures, 3);\n  subArrayRes && console.log(\"subArrays are\", subArrayRes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, subArrayRes && subArrayRes.map(pictureArr => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\",\n      height: 300\n    },\n    src: pictureArr[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col border border-5\",\n    style: {\n      backgroundColor: \"gray\",\n      borderColor: \"black\",\n      borderWidth: 50,\n      borderRadius: 20,\n      border\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"90%\",\n      height: 200\n    },\n    src: pictureArr[1] && pictureArr[1].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"100%\",\n      height: 300\n    },\n    src: pictureArr[2] && pictureArr[2].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, process.env.REACT_APP_NASA_API_KEY));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/front-end-assignment-master/src/App.js"],"names":["React","useEffect","getNASAPictures","App","pictures","updatePictures","useState","console","log","startDate","Date","endDate","then","res","filter","image","media_type","subArrays","spliter","array","chunkSize","i","length","chunk","slice","push","subArrayRes","map","pictureArr","marginBottom","width","height","url","backgroundColor","borderColor","borderWidth","borderRadius","border","process","env","REACT_APP_NASA_API_KEY"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { getNASAPictures } from \"./NasaAPI\";\n\nfunction App() {\n  const [pictures, updatePictures] = React.useState(null);\n  console.log(\"pictures are\", pictures);\n  useEffect(() => {\n    if (!pictures) {\n      // const startDate = new Date(\"2020-07-01T08:28:41.917Z\");\n      const startDate = new Date(\"2022-02-20T08:28:41.917Z\");\n      const endDate = new Date();\n      getNASAPictures(startDate, endDate).then((res) => {\n        console.log(\"startDate is\", startDate);\n        console.log(\"endDate is\", endDate);\n        console.log(\"res is\", res);\n        updatePictures(res.filter((image) => image.media_type === \"image\"));\n      });\n    }\n  }, [pictures]);\n  let subArrays = [];\n  function spliter(array, chunkSize) {\n    for (let i = 0; i < array.length; i += chunkSize) {\n      const chunk = array.slice(i, i + chunkSize);\n      // do whatever\n      console.log();\n      subArrays.push(chunk);\n    }\n    return subArrays;\n  }\n  let subArrayRes = pictures && spliter(pictures, 3);\n  subArrayRes && console.log(\"subArrays are\", subArrayRes);\n  return (\n    <div className=\"App\">\n      {subArrayRes &&\n        subArrayRes.map((pictureArr) => (\n          <div className=\"row\" style={{ marginBottom: 10 }}>\n            <div className=\"col\">\n              <img\n                style={{ width: \"100%\", height: 300 }}\n                src={pictureArr[0].url}\n              />\n            </div>\n            <div\n              className=\"col border border-5\"\n              style={{\n                backgroundColor: \"gray\",\n                borderColor: \"black\",\n                borderWidth: 50,\n                borderRadius: 20,\n                border,\n              }}\n            >\n              <img\n                style={{ width: \"90%\", height: 200 }}\n                src={pictureArr[1] && pictureArr[1].url}\n              />\n            </div>\n            <div className=\"col\">\n              <img\n                style={{ width: \"100%\", height: 300 }}\n                src={pictureArr[2] && pictureArr[2].url}\n              />\n            </div>\n          </div>\n        ))}\n      {/* <div class=\"row\">\n        <div class=\"col\">col</div>\n        <div class=\"col\">col</div>\n        <div class=\"col\">col</div>\n      </div> */}\n      {/* {pictures &&\n        pictures.map((picture) => (\n          <div className=\"col-md-12\">\n            <div className=\"col-md-2\" key={picture.date}>\n              <img src={picture.url} />\n              <button type=\"button\" class=\"btn btn-primary\">\n                Primary\n              </button>\n              <button type=\"button\" class=\"btn btn-warning\">\n                Warning\n              </button>\n            </div>\n          </div>\n        ))} */}\n      <p>{process.env.REACT_APP_NASA_API_KEY}</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}